basePath: /api
definitions:
  domain.Role:
    properties:
      id:
        type: integer
      level:
        type: integer
      name:
        type: string
    type: object
  domain.User:
    properties:
      Role:
        $ref: '#/definitions/domain.Role'
      auth_uuid:
        type: string
      full_name:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      role_id:
        type: integer
    type: object
  dto.RequestLogin:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  dto.RequestRole:
    properties:
      level:
        type: integer
      name:
        type: string
    type: object
  dto.RequestUser:
    properties:
      full_name:
        type: string
      password:
        type: string
      role_id:
        type: integer
      username:
        type: string
    type: object
  models.JSONResponsesSwaggerSucceed:
    properties:
      code:
        default: 200
        example: 200
        type: integer
      data:
        default: nil
        type: string
      status:
        default: Succeed
        example: Succeed
        type: string
    type: object
info:
  contact:
    email: fekalegi@gmail.com
    name: Feka Legi Heryana Rizki
  description: This is swagger for  Mini Rest Api
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Mini Rest Api
  version: "1.0"
paths:
  /role:
    post:
      consumes:
      - application/json
      description: This endpoint for create new Role
      parameters:
      - description: Create new role
        in: body
        name: services
        required: true
        schema:
          $ref: '#/definitions/dto.RequestRole'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JSONResponsesSwaggerSucceed'
      summary: Create New Role
      tags:
      - Role
  /role/{id}:
    delete:
      consumes:
      - application/json
      description: This endpoint for Delete product category by ID
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.JSONResponsesSwaggerSucceed'
            - properties:
                data:
                  $ref: '#/definitions/domain.Role'
              type: object
      summary: Delete Role by ID
      tags:
      - Role
    get:
      consumes:
      - application/json
      description: This endpoint for fetch product category by ID
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.JSONResponsesSwaggerSucceed'
            - properties:
                data:
                  $ref: '#/definitions/domain.Role'
              type: object
      summary: Fetch Role by ID
      tags:
      - Role
    put:
      consumes:
      - application/json
      description: This endpoint for Update product category by ID
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      - description: Create new role
        in: body
        name: services
        required: true
        schema:
          $ref: '#/definitions/dto.RequestRole'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.JSONResponsesSwaggerSucceed'
            - properties:
                data:
                  $ref: '#/definitions/domain.Role'
              type: object
      summary: Update Role by ID
      tags:
      - Role
  /roles:
    get:
      consumes:
      - application/json
      description: This endpoint for fetch all product category
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.JSONResponsesSwaggerSucceed'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/domain.Role'
                  type: array
              type: object
      summary: Fetch All Role
      tags:
      - Role
  /user:
    get:
      consumes:
      - application/json
      description: This endpoint for fetch all user
      parameters:
      - in: query
        name: filter
        type: string
      - in: query
        name: page_number
        type: integer
      - in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.JSONResponsesSwaggerSucceed'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/domain.User'
                  type: array
              type: object
      summary: Fetch All User
      tags:
      - User
    post:
      consumes:
      - application/json
      description: This endpoint for Add User
      parameters:
      - description: Login Authentication
        in: body
        name: services
        required: true
        schema:
          $ref: '#/definitions/dto.RequestUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JSONResponsesSwaggerSucceed'
      summary: Add User
      tags:
      - User
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: This endpoint for Delete user
      parameters:
      - description: User Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.JSONResponsesSwaggerSucceed'
            - properties:
                data:
                  $ref: '#/definitions/domain.User'
              type: object
      summary: Delete User  by ID
      tags:
      - User
    get:
      consumes:
      - application/json
      description: This endpoint for fetch user  by ID
      parameters:
      - description: User Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.JSONResponsesSwaggerSucceed'
            - properties:
                data:
                  $ref: '#/definitions/domain.User'
              type: object
      summary: Fetch User  by ID
      tags:
      - User
    patch:
      consumes:
      - application/json
      description: This endpoint for Update user
      parameters:
      - description: User Id
        in: path
        name: id
        required: true
        type: string
      - description: Create new services
        in: body
        name: services
        required: true
        schema:
          $ref: '#/definitions/dto.RequestUser'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.JSONResponsesSwaggerSucceed'
            - properties:
                data:
                  $ref: '#/definitions/domain.User'
              type: object
      summary: Update User  by ID
      tags:
      - User
  /user/authentications:
    delete:
      consumes:
      - application/json
      description: This endpoint for Delete Authentication
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JSONResponsesSwaggerSucceed'
      summary: Delete Authentication
      tags:
      - User
    post:
      consumes:
      - application/json
      description: This endpoint for Login Authentication
      parameters:
      - description: Login Authentication
        in: body
        name: services
        required: true
        schema:
          $ref: '#/definitions/dto.RequestLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JSONResponsesSwaggerSucceed'
      summary: Login Authentication
      tags:
      - User
    put:
      consumes:
      - application/json
      description: This endpoint for Refresh Authentication
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JSONResponsesSwaggerSucceed'
      summary: Refresh Authentication
      tags:
      - User
swagger: "2.0"
