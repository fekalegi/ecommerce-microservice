basePath: /api
definitions:
  domain.Category:
    properties:
      id:
        type: string
      name:
        type: string
      products:
        items:
          $ref: '#/definitions/domain.Product'
        type: array
    type: object
  domain.Product:
    properties:
      category_id:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
      stock:
        type: integer
      user_id:
        type: integer
    type: object
  domain.Wishlist:
    properties:
      id:
        type: string
      product:
        $ref: '#/definitions/domain.Product'
      product_id:
        type: string
      user_id:
        type: integer
    type: object
  dto.RequestCategory:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  dto.RequestProduct:
    properties:
      category_id:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
      stock:
        type: integer
    type: object
  dto.RequestWishlist:
    properties:
      id:
        type: string
      product_id:
        type: string
    required:
    - id
    - product_id
    type: object
  models.JSONResponsesSwaggerSucceed:
    properties:
      code:
        default: 200
        example: 200
        type: integer
      data:
        default: nil
        type: string
      status:
        default: Succeed
        example: Succeed
        type: string
    type: object
info:
  contact:
    email: fekalegi@gmail.com
    name: Feka Legi Heryana Rizki
  description: This is swagger for  Mini Rest Api
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Mini Rest Api
  version: "1.0"
paths:
  /category:
    get:
      consumes:
      - application/json
      description: This endpoint for fetch all category
      parameters:
      - in: query
        name: filter
        type: string
      - in: query
        name: page_number
        type: integer
      - in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.JSONResponsesSwaggerSucceed'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/domain.Category'
                  type: array
              type: object
      summary: Fetch All Category
      tags:
      - Category
    post:
      consumes:
      - application/json
      description: This endpoint for create new Category
      parameters:
      - description: Create new services
        in: body
        name: services
        required: true
        schema:
          $ref: '#/definitions/dto.RequestCategory'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JSONResponsesSwaggerSucceed'
      summary: Create New Category
      tags:
      - Category
  /category/{id}:
    delete:
      consumes:
      - application/json
      description: This endpoint for Delete category
      parameters:
      - description: Category Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.JSONResponsesSwaggerSucceed'
            - properties:
                data:
                  $ref: '#/definitions/domain.Category'
              type: object
      summary: Delete Category by ID
      tags:
      - Category
    get:
      consumes:
      - application/json
      description: This endpoint for fetch category by ID
      parameters:
      - description: Category Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.JSONResponsesSwaggerSucceed'
            - properties:
                data:
                  $ref: '#/definitions/domain.Category'
              type: object
      summary: Fetch Category by ID
      tags:
      - Category
    patch:
      consumes:
      - application/json
      description: This endpoint for Update category
      parameters:
      - description: Category Id
        in: path
        name: id
        required: true
        type: string
      - description: Create new services
        in: body
        name: services
        required: true
        schema:
          $ref: '#/definitions/dto.RequestCategory'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.JSONResponsesSwaggerSucceed'
            - properties:
                data:
                  $ref: '#/definitions/domain.Category'
              type: object
      summary: Update Category by ID
      tags:
      - Category
  /product:
    get:
      consumes:
      - application/json
      description: This endpoint for fetch all product
      parameters:
      - in: query
        name: filter
        type: string
      - in: query
        name: page_number
        type: integer
      - in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.JSONResponsesSwaggerSucceed'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/domain.Product'
                  type: array
              type: object
      summary: Fetch All Product
      tags:
      - Product
    post:
      consumes:
      - application/json
      description: This endpoint for create new Product
      parameters:
      - description: Create new services
        in: body
        name: services
        required: true
        schema:
          $ref: '#/definitions/dto.RequestProduct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JSONResponsesSwaggerSucceed'
      summary: Create New Product
      tags:
      - Product
  /product/{id}:
    delete:
      consumes:
      - application/json
      description: This endpoint for Delete product
      parameters:
      - description: Product Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.JSONResponsesSwaggerSucceed'
            - properties:
                data:
                  $ref: '#/definitions/domain.Product'
              type: object
      summary: Delete Product by ID
      tags:
      - Product
    get:
      consumes:
      - application/json
      description: This endpoint for fetch product by ID
      parameters:
      - description: Product Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.JSONResponsesSwaggerSucceed'
            - properties:
                data:
                  $ref: '#/definitions/domain.Product'
              type: object
      summary: Fetch Product by ID
      tags:
      - Product
    patch:
      consumes:
      - application/json
      description: This endpoint for Update product
      parameters:
      - description: Product Id
        in: path
        name: id
        required: true
        type: string
      - description: Create new services
        in: body
        name: services
        required: true
        schema:
          $ref: '#/definitions/dto.RequestProduct'
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.JSONResponsesSwaggerSucceed'
            - properties:
                data:
                  $ref: '#/definitions/domain.Product'
              type: object
      summary: Update Product by ID
      tags:
      - Product
  /wishlist:
    get:
      consumes:
      - application/json
      description: This endpoint for fetch all wishlist
      parameters:
      - in: query
        name: filter
        type: string
      - in: query
        name: page_number
        type: integer
      - in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.JSONResponsesSwaggerSucceed'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/domain.Wishlist'
                  type: array
              type: object
      summary: Fetch All Wishlist
      tags:
      - Wishlist
    post:
      consumes:
      - application/json
      description: This endpoint for create new Wishlist
      parameters:
      - description: Create new services
        in: body
        name: services
        required: true
        schema:
          $ref: '#/definitions/dto.RequestWishlist'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JSONResponsesSwaggerSucceed'
      summary: Create New Wishlist
      tags:
      - Wishlist
  /wishlist/{id}:
    delete:
      consumes:
      - application/json
      description: This endpoint for Delete wishlist
      parameters:
      - description: Wishlist Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.JSONResponsesSwaggerSucceed'
            - properties:
                data:
                  $ref: '#/definitions/domain.Wishlist'
              type: object
      summary: Delete Wishlist by ID
      tags:
      - Wishlist
    get:
      consumes:
      - application/json
      description: This endpoint for fetch wishlist by ID
      parameters:
      - description: Wishlist Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: desc
          schema:
            allOf:
            - $ref: '#/definitions/models.JSONResponsesSwaggerSucceed'
            - properties:
                data:
                  $ref: '#/definitions/domain.Wishlist'
              type: object
      summary: Fetch Wishlist by ID
      tags:
      - Wishlist
swagger: "2.0"
